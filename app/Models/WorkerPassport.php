<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\Storage;
use OpenApi\Annotations as OA;

class WorkerPassport extends Model {
    use HasFactory;

    protected $fillable = [
        'user_id', 'passport_no', 'passport_country_id', 'country_iso3_code', 'country_name', 'nationality', 'family_name', 'middle_name',
        'given_names', 'birthday', 'birth_place', 'sex', 'issue_place', 'issue_date', 'expire_date', 'file_path'
    ];

    /**
     * 회원 사진을 저장한다.
     * @param UploadedFile $photo
     * @return string
     */
    public static function saveFile(UploadedFile $photo) : string {
        return $photo->store('worker_passports', 'local');
    }

    /**
     * 지정 파일을 삭제한다.
     * @param string|null $file_path
     * @return void
     */
    public static function deleteFile(?string $file_path = null) : void {
        if(!$file_path) return;
        Storage::disk('local')->delete($file_path);
    }

    /**
     * find 대용, 리턴 타입 설정 문제로 사용
     * @param $id
     * @return WorkerPassport|null
     */
    public static function findMe(?int $id = null) : ?WorkerPassport {
        if(!$id) return null;
        return static::find($id);
    }

    /**
     * 데이터 삭제 시 저장된 파일이 있는 경우 삭제하고 데이터를 삭제한다.
     * @return bool|null
     */
    public function delete() {
        if($this->file_path) static::deleteFile($this->file_path);;
        return parent::delete(); // TODO: Change the autogenerated stub
    }

    /**
     * @param string $no
     * @return WorkerPassport|null
     */
    public static function findByPassportNo(?string $no) : ?WorkerPassport {
        if(!$no) return null;

        return static::where('passport_no', $no)
            ->get()->first();
    }

    /**
     * 여권정보를 배열로 리턴한다.
     * @param string $api_version
     * @return array
     * @OA\Schema (
     *     schema="worker_passport",
     *     title="근로자 여권정보",
     *     @OA\Property (property="id", type="integer", description="여권정보 일련번호"),
     *     @OA\Property (property="passport_no", type="string", description="여권번호"),
     *     @OA\Property (property="country", type="object", description="발급 국가", ref="#/components/schemas/country"),
     *     @OA\Property (property="family_name", type="string", description="이름(성)"),
     *     @OA\Property (property="middle_name", type="string", description="중간이름"),
     *     @OA\Property (property="given_name", type="string", description="이름"),
     *     @OA\Property (property="birthday", type="string", format="date", description="생년월일"),
     *     @OA\Property (property="birth_place", type="string", description="출생지"),
     *     @OA\Property (property="sex", type="string", enum={"M","F"}, description="성별"),
     *     @OA\Property (property="issue_place", type="string", description="발급지"),
     *     @OA\Property (property="issue_date", type="string", format="date", description="발급일자"),
     *     @OA\Property (property="expire_date", type="string", format="date", description="만료일자"),
     *     @OA\Property (property="file", type="string", description="여권파일 URL"),
     *     @OA\Property (property="created_at", type="string", format="date-time", description="생성일시"),
     *     @OA\Property (property="updated_at", type="string", format="date-time", description="변경일시"),
     * )
     */
    public function toInfoArray(string $api_version = 'v1') : array {
        return [
            'id' => $this->id,
            'passport_no' => $this->passport_no,
            'country' => Country::findMe($this->passport_country_id),
            'family_name' => $this->family_name,
            'middle_name' => $this->middle_name,
            'given_names' => $this->given_names,
            'birthday' => $this->birthday,
            'birth_place' => $this->birth_place,
            'sex' => $this->sex,
            'issue_place' => $this->issue_place,
            'issue_date' => $this->issue_date,
            'expire_date' => $this->expire_date,
            'file' => $this->file_path ? route("api.{$api_version}.worker.show_passport_file", ['id' => $this->id, '_token' => access_token()]) : null,
            'created_at' => $this->created_at->format('Y-m-d H:i:s'),
            'updated_at' => $this->updated_at->format('Y-m-d H:i:s')
        ];
    }
}

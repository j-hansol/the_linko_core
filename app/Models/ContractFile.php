<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\Storage;
use OpenApi\Annotations as OA;

class ContractFile extends Model
{
    use HasFactory;

    protected $fillable = [
        'upload_user_id', 'contract_id', 'title', 'file_group', 'origin_name', 'file_path'
    ];

    protected $casts = [
        'created_at' => 'datetime:Y-m-d H:i:s',
        'updated_at' => 'datetime:Y-m-d H:i:s',
    ];

    /**
     * 계약관련 파일정보를 배열로 리턴한다.
     * @param string|null $api_version
     * @return array
     * @OA\Schema(
     *     schema="contract_file_data",
     *     title="순수 계약관련 파일정보",
     *     @OA\Property(
     *          property="author",
     *          description="업로드 사용자",
     *          ref="#/components/schemas/simple_user_info"
     *     ),
     *     @OA\Property(
     *          property="title",
     *          type="string",
     *          description="제목",
     *     ),
     *     @OA\Property(
     *          property="group",
     *          type="integer",
     *          description="문서 그룹",
     *     ),
     *     @OA\Property(
     *          property="url",
     *          type="string",
     *          description="다운로드 경로",
     *     )
     * )
     * @OA\Schema(
     *     schema="contract_file_info",
     *     title="순수 계약관련 파일정보",
     *     allOf={
     *          @OA\Schema(ref="#/components/schemas/contract_file_data"),
     *          @OA\Schema(ref="#/components/schemas/model_timestamps"),
     *     }
     * )
     */
    public function toInfoArray(?string $api_version = 'v1') : array {
        return [
            'author' => User::findMe($this->upload_user_id)?->toSimpleArray(),
            'title' => $this->title,
            'group' => $this->file_group,
            'url' => $this->routePath($api_version),
            'created_at' => $this->created_at,
            'updated_at' => $this->updated_at
        ];
    }

    /**
     * 파일 다운로드 경로를 출력한다.
     * @param string|null $api_version
     * @return string|null
     */
    public function routePath(?string $api_version = 'v1') : ?string {
        return route("api.${api_version}.contract.file.download", ['id' => $this->id, '_token' => access_token()]);
    }

    /**
     * 문서를 저장한다.
     * @param UploadedFile $file
     * @return string
     */
    public static function saveFile(UploadedFile $file) : string {
        return $file->store('contract_files', 'local');
    }

    /**
     * 파일정보 삭제 전에 저장된 파일을 삭제한다.
     * @return bool|null
     */
    public function delete() {
        Storage::disk('local')->delete($this->file_path);
        return parent::delete(); // TODO: Change the autogenerated stub
    }


}

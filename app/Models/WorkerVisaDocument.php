<?php

namespace App\Models;

use App\Traits\Common\FindByUser;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\Storage;
use OpenApi\Annotations as OA;

class WorkerVisaDocument extends Model {
    use HasFactory, FindByUser;

    protected $fillable = [
        'user_id', 'type_id', 'title', 'file_path', 'origin_name'
    ];

    protected $casts = [
        'created_at' => 'datetime:Y-m-d H:i:s',
        'updated_at' => 'datetime:Y-m-d H:i:s',
    ];

    /**
     * 리턴 타입을 위해 이용
     * @param int|null $id
     * @return VisaDocument|null
     */
    public static function findMe(?int $id) : ?VisaDocument {
        if(!$id) return null;
        return static::find($id);
    }

    /**
     * 지정 문서 유형의 문서 개수를 리턴한다.
     * @param VisaDocumentType $type
     * @return int
     */
    public static function countDocumentByType(VisaDocumentType $type) : int {
        return static::where('type_id', $type->id)->count();
    }

    /**
     * 문서를 저장한다.
     * @param UploadedFile $file
     * @return string
     */
    public static function saveFile(UploadedFile $file) : string {
        return $file->store('worker_visa_documents', 'local');
    }

    /**
     * 삭제시 저장 파일도 삭제한다.
     * @return bool|null
     */
    public function delete() {
        if($this->file_path) Storage::disk('local')->delete($this->file_path);
        return parent::delete(); // TODO: Change the autogenerated stub
    }

    /**
     * 파일 경로 저장 필드 및 저장 경로를 리턴한다.
     * @return array
     */
    public static function basePath() : array {
        return [
            'file_path' => 'worker_visa_documents'
        ];
    }
}
